<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="metroLink2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>